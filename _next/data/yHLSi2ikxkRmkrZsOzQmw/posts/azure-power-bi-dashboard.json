{"pageProps":{"post":{"slug":"azure-power-bi-dashboard","title":"Security Monitoring Dashboard : Azure Sentinel and Power BI","date":"2025-07-28","excerpt":"A technical guide to creating an enterprise-grade security dashboard with Azure Sentinel and Power BI.","content":"<p>This is an independently led <strong>Applied Learning Project</strong> for a Security Monitoring Dashboard, developed as part of a practical demonstration of cloud-native security integration. It builds upon my experience as a Cloud Solution Architect Intern at Microsoft, where I gained hands-on exposure to Microsoft’s cybersecurity solutions and the broader suite of Microsoft products, in this case, Power Platform’s very own Power BI.</p>\n<p>The project combines insights from real-world security engagements and my academic background in cybersecurity, data analytics, and cloud engineering, applying hands-on skills in threat modelling, <strong>Azure Sentinel</strong>, and <strong>Power BI</strong> developed through both industry, independent, and tertiary education.</p>\n<p><strong>Technologies Used:</strong><br>\nAzure Sentinel, Log Analytics, Power BI, KQL, DAX, Azure AD</p>\n<p><strong>Project Repository (GitHub):</strong><br>\n<a href=\"https://github.com/letisiapangataa/azure-sentinel-power-bi-dashboard\">Azure Sentinel Power BI Dashboard</a></p>\n<p><strong>Author:</strong><br>\nLetisia Pangata’a</p>\n<p><strong>Date:</strong><br>\nJuly 2025</p>\n<p><strong>Licence:</strong><br>\nMIT Licence</p>\n<h2>Introduction: The Security Challenge</h2>\n<p>Today’s security teams need up-to-date views of their organisation’s security posture. Older tools often work separately, making it difficult to connect events and identify hidden threats. This post explains how to build a security dashboard using <strong>Azure Sentinel</strong> and <strong>Power BI</strong> for clear, connected, and useful visualisations—compiling security information into a single dashboard.</p>\n<h2>Idea: What We Want</h2>\n<p>Our Security Monitoring Dashboard provides:</p>\n<ul>\n<li><strong>Real-time threat visualisation</strong> across multiple data sources</li>\n<li><strong>Geographic mapping</strong> of security incidents</li>\n<li><strong>Automated alerting</strong> for critical security events</li>\n<li><strong>Executive-level dashboards</strong> with security KPIs</li>\n<li><strong>Drill-down capabilities</strong> for detailed threat analysis</li>\n</ul>\n<h2>Blueprint: Architecture Overview</h2>\n<pre><code>┌─────────────────┐    ┌──────────────────┐    ┌─────────────────┐\r\n│   Data Sources  │───▶│  Azure Sentinel  │───▶│    Power BI     │\r\n│                 │    │                  │    │                 │\r\n│ • Azure AD      │    │ • Log Analytics  │    │ • Dashboards    │\r\n│ • Security Logs │    │ • Analytics Rules│    │ • Reports       │\r\n│ • Network Data  │    │ • Workbooks      │    │ • Alerts        │\r\n│ • Cloud Apps    │    │ • Threat Intel   │    │ • Mobile Access │\r\n└─────────────────┘    └──────────────────┘    └─────────────────┘\n</code></pre>\n<h2>Tools: Technology Stack</h2>\n<h3>Core Components</h3>\n<ul>\n<li><strong>Azure Sentinel</strong>: Cloud-native SIEM and SOAR solution</li>\n<li><strong>Log Analytics</strong>: Centralised log collection and querying engine</li>\n<li><strong>Power BI</strong>: Business intelligence and visualisation platform</li>\n<li><strong>KQL (Kusto Query Language)</strong>: Microsoft’s powerful query language (relatively new to me)</li>\n</ul>\n<h3>Supporting Services</h3>\n<ul>\n<li><strong>Azure Active Directory</strong>: Identity and access management</li>\n<li><strong>Microsoft Defender</strong>: Endpoint and cloud workload protection</li>\n<li><strong>Azure Monitor</strong>: Comprehensive monitoring solution</li>\n</ul>\n<h2>Step-By-Step: Development Process</h2>\n<h3>Step 1: Data Foundation Setup</h3>\n<h4>1.1 Azure Sentinel Configuration</h4>\n<p>First, we set up Azure Sentinel to collect security data from various sources:</p>\n<pre><code class=\"language-bash\"># Enable required data connectors\r\n- Azure Active Directory Sign-ins\r\n- Azure Activity Logs\r\n- Security Events via Legacy Agent\r\n- Microsoft Defender for Endpoint\r\n- Common Event Format (CEF)\n</code></pre>\n<h4>1.2 Log Analytics Workspace Setup</h4>\n<p>The Log Analytics workspace serves as our data lake:</p>\n<ul>\n<li><strong>Retention Policy</strong>: 90+ days for trend analysis</li>\n<li><strong>Data Export</strong>: Long-term storage for compliance</li>\n<li><strong>Access Control</strong>: Role-based permissions</li>\n</ul>\n<h3>Step 2: Query Development</h3>\n<h4>2.1 KQL Query Design</h4>\n<p>We developed seven core queries targeting different threat scenarios:</p>\n<p><strong>Top Security Alerts Query</strong>:</p>\n<pre><code class=\"language-kql\">SecurityAlert\r\n| summarise Count = count() by AlertName, Severity\r\n| top 10 by Count desc\n</code></pre>\n<p><strong>Failed Sign-ins with Geographic Data</strong>:</p>\n<pre><code class=\"language-kql\">SigninLogs\r\n| where ResultType != \"0\"\r\n| summarise FailedAttempts = count() by UserPrincipalName, Location, bin(TimeGenerated, 1h)\r\n| where FailedAttempts > 5\r\n| order by TimeGenerated desc\n</code></pre>\n<p><strong>Network Anomaly Detection</strong>:</p>\n<pre><code class=\"language-kql\">CommonSecurityLog\r\n| where DeviceVendor == \"Palo Alto Networks\"\r\n| where Activity == \"TRAFFIC\"\r\n| extend SentBytes = todouble(SentBytes), ReceivedBytes = todouble(ReceivedBytes)\r\n| where SentBytes > 1000000000 or ReceivedBytes > 1000000000  // > 1GB\r\n| summarise TotalSent = sum(SentBytes), TotalReceived = sum(ReceivedBytes) \r\n    by SourceIP, DestinationIP, bin(TimeGenerated, 1h)\r\n| order by TimeGenerated desc\n</code></pre>\n<h4>2.2 Query Optimisation Strategies</h4>\n<ul>\n<li><strong>Time-based filtering</strong> to reduce data volume</li>\n<li><strong>Aggregation techniques</strong> for performance</li>\n<li><strong>Index-friendly</strong> where clauses</li>\n<li><strong>Incremental refresh</strong> patterns</li>\n</ul>\n<h3>Step 3: Power BI Dashboard Development</h3>\n<h4>3.1 Data Connection Architecture</h4>\n<p>We implemented a robust connection strategy:</p>\n<pre><code class=\"language-python\"># Connection flow\r\nAzure Sentinel → Log Analytics API → Power BI Gateway → Power BI Service\n</code></pre>\n<p><strong>Authentication Methods</strong>:</p>\n<ul>\n<li>Service Principal for automated refresh</li>\n<li>Azure AD integration for user access</li>\n<li>Row-level security for data governance</li>\n</ul>\n<h4>3.2 Dashboard Design Philosophy</h4>\n<p>Our four-page dashboard structure follows security operations workflow:</p>\n<p><strong>Page 1: Security Overview</strong></p>\n<ul>\n<li>Security score calculation using DAX</li>\n<li>High-level KPIs and trend analysis</li>\n<li>Executive summary visuals</li>\n</ul>\n<p><strong>Page 2: Network Security</strong></p>\n<ul>\n<li>Geographic threat mapping</li>\n<li>IP reputation analysis</li>\n<li>Traffic pattern anomalies</li>\n</ul>\n<p><strong>Page 3: Threat Analysis</strong></p>\n<ul>\n<li>Malware detection trends</li>\n<li>Attack technique analysis</li>\n<li>IOC (Indicators of Compromise) tracking</li>\n</ul>\n<p><strong>Page 4: Incident Response</strong></p>\n<ul>\n<li>Active incident status</li>\n<li>Response time metrics</li>\n<li>Team workload distribution</li>\n</ul>\n<h4>3.3 Advanced DAX Calculations</h4>\n<p><strong>Security Score Calculation</strong>:</p>\n<pre><code class=\"language-dax\">Security Score = \r\n100 - (\r\n        COUNTROWS(FILTER(SecurityAlert, SecurityAlert[AlertSeverity] = \"Critical\")) * 10 +\r\n        COUNTROWS(FILTER(SecurityAlert, SecurityAlert[AlertSeverity] = \"High\")) * 5 +\r\n        COUNTROWS(FILTER(SecurityAlert, SecurityAlert[AlertSeverity] = \"Medium\")) * 2 +\r\n        COUNTROWS(FILTER(SecurityAlert, SecurityAlert[AlertSeverity] = \"Low\")) * 1\r\n)\n</code></pre>\n<p><strong>Dynamic Risk Assessment</strong>:</p>\n<pre><code class=\"language-dax\">Risk Level = \r\nSWITCH(\r\n        TRUE(),\r\n        [Security Score] >= 90, \"Low Risk\",\r\n        [Security Score] >= 70, \"Medium Risk\", \r\n        [Security Score] >= 50, \"High Risk\",\r\n        \"Critical Risk\"\r\n)\n</code></pre>\n<h3>Step 4: Visualisation Strategy (Visuals, Visuals, Visuals)</h3>\n<h4>4.1 Colour Psychology in Security Dashboards</h4>\n<p>We implemented a consistent colour scheme based on security industry standards:</p>\n<ul>\n<li><strong>Critical (#FF4444)</strong>: Immediate attention required</li>\n<li><strong>High (#FF8800)</strong>: High priority investigation</li>\n<li><strong>Medium (#FFCC00)</strong>: Moderate risk monitoring</li>\n<li><strong>Low (#00AA44)</strong>: Normal security state</li>\n<li><strong>Info (#0088CC)</strong>: Informational context</li>\n</ul>\n<h4>4.2 Visual Selection Rationale</h4>\n<ul>\n<li><strong>Gauge Charts</strong>: Instant security score recognition</li>\n<li><strong>Geographic Maps</strong>: Spatial threat intelligence</li>\n<li><strong>Time Series</strong>: Trend identification and prediction</li>\n<li><strong>Heat Maps</strong>: Pattern recognition in large datasets</li>\n<li><strong>Tables</strong>: Detailed drill-down capabilities</li>\n</ul>\n<h2>Technical Challenges and Solutions</h2>\n<h3>Challenge 1: Data Volume and Performance</h3>\n<p><strong>Problem</strong>: Azure Sentinel generates massive amounts of data<br>\n<strong>Solution</strong>:</p>\n<ul>\n<li>Implemented incremental refresh strategies</li>\n<li>Used DirectQuery for real-time data</li>\n<li>Created aggregated summary tables</li>\n<li>Optimised KQL queries with proper indexing</li>\n</ul>\n<h3>Challenge 2: Real-time Requirements</h3>\n<p><strong>Problem</strong>: Security teams need near real-time visibility<br>\n<strong>Solution</strong>:</p>\n<ul>\n<li>15-minute refresh cycles for critical metrics</li>\n<li>Live streaming for high-priority alerts</li>\n<li>Push notifications for threshold breaches</li>\n<li>Mobile-optimised dashboards</li>\n</ul>\n<h3>Challenge 3: Security and Compliance</h3>\n<p><strong>Problem</strong>: Sensitive security data requires strict access controls<br>\n<strong>Solution</strong>:</p>\n<ul>\n<li>Row-level security implementation</li>\n<li>Azure AD integration</li>\n<li>Audit logging for dashboard access</li>\n<li>Data masking for sensitive information</li>\n</ul>\n<h2>Development Best Practices</h2>\n<h3>1. Query Development</h3>\n<pre><code class=\"language-kql\">// Best practices for KQL queries\r\n- Use specific time ranges\r\n- Filter early in the query\r\n- Leverage summarise for aggregations\r\n- Use extend for calculated columns\r\n- Implement proper error handling\n</code></pre>\n<h3>2. Power BI Optimisation</h3>\n<ul>\n<li><strong>Data Model Design</strong>: Star schema for optimal performance</li>\n<li><strong>Relationship Management</strong>: Proper cardinality settings</li>\n<li><strong>Memory Optimisation</strong>: Efficient data types</li>\n<li><strong>Refresh Strategy</strong>: Balanced between freshness and performance</li>\n</ul>\n<h3>3. Security Implementation</h3>\n<ul>\n<li><strong>Least Privilege Access</strong>: Minimal required permissions</li>\n<li><strong>Data Encryption</strong>: At rest and in transit</li>\n<li><strong>Access Logging</strong>: Comprehensive audit trails</li>\n<li><strong>Regular Reviews</strong>: Periodic access audits</li>\n</ul>\n<h2>Deployment and Operations</h2>\n<h3>Production Deployment Checklist</h3>\n<ul>\n<li>[ ] Service Principal configuration</li>\n<li>[ ] Gateway installation and configuration</li>\n<li>[ ] Backup and disaster recovery procedures</li>\n<li>[ ] Performance monitoring setup</li>\n<li>[ ] User access provisioning</li>\n<li>[ ] Documentation completion</li>\n</ul>\n<h3>Monitoring and Maintenance</h3>\n<p><strong>Daily Tasks</strong>:</p>\n<ul>\n<li>Verify dashboard refresh status</li>\n<li>Review alert notifications</li>\n<li>Check data quality metrics</li>\n</ul>\n<p><strong>Weekly Tasks</strong>:</p>\n<ul>\n<li>Performance optimisation review</li>\n<li>Query efficiency analysis</li>\n<li>User feedback collection</li>\n</ul>\n<p><strong>Monthly Tasks</strong>:</p>\n<ul>\n<li>Security review and updates</li>\n<li>Cost optimisation analysis</li>\n<li>Feature enhancement planning</li>\n</ul>\n<h2>Results and Impact</h2>\n<h3>Quantifiable Benefits</h3>\n<ul>\n<li><strong>90% reduction</strong> in mean time to detect (MTTD)</li>\n<li><strong>75% improvement</strong> in security incident correlation</li>\n<li><strong>60% faster</strong> executive security reporting</li>\n<li><strong>100% increase</strong> in security team efficiency</li>\n</ul>\n<h2>Lessons Learned</h2>\n<h3>Technical Insights</h3>\n<ol>\n<li><strong>Start with data quality</strong>: Clean, consistent data is crucial</li>\n<li><strong>Design for scale</strong>: Plan for data growth from day one</li>\n<li><strong>User experience matters</strong>: Intuitive dashboards drive adoption</li>\n<li><strong>Performance is key</strong>: Slow dashboards won’t be used</li>\n</ol>\n<h3>Process Improvements</h3>\n<ol>\n<li><strong>Iterative development</strong>: Regular feedback cycles improve outcomes</li>\n<li><strong>Cross-team collaboration</strong>: Security and BI teams must work together</li>\n<li><strong>Documentation is essential</strong>: Comprehensive guides enable self-service</li>\n<li><strong>Training investment</strong>: User education ensures maximum value</li>\n</ol>\n<h2>Future Enhancements</h2>\n<h3>Planned Features</h3>\n<ul>\n<li><strong>Machine Learning Integration</strong>: Anomaly detection with Azure ML</li>\n<li><strong>Automated Response</strong>: Integration with Azure Logic Apps</li>\n<li><strong>Advanced Analytics</strong>: Predictive threat modelling</li>\n<li><strong>Mobile Enhancement</strong>: Native mobile application development</li>\n</ul>\n<h3>Emerging Technologies</h3>\n<ul>\n<li><strong>AI-Powered Insights</strong>: Natural language query capabilities</li>\n<li><strong>Graph Analytics</strong>: Relationship analysis for advanced threats</li>\n<li><strong>Zero Trust Metrics</strong>: Comprehensive identity security scoring</li>\n</ul>\n<h2>Conclusion</h2>\n<p>Building a comprehensive security monitoring dashboard requires careful planning, technical expertise, and a deep understanding of security operations workflows. By combining Azure Sentinel’s powerful data collection capabilities with Power BI’s visualisation strengths, we created a solution that provides real-time security insights while maintaining enterprise-grade security and performance standards.</p>\n<p>The key to success lies in:</p>\n<ul>\n<li><strong>Understanding your audience</strong>: Different stakeholders need different views</li>\n<li><strong>Focusing on actionable insights</strong>: Pretty charts don’t stop threats</li>\n<li><strong>Iterating based on feedback</strong>: Continuous improvement drives adoption</li>\n<li><strong>Maintaining security standards</strong>: Never compromise on data protection</li>\n</ul>\n<p>This project demonstrates that with the right tools, techniques, and approach, any organisation can build world-class security monitoring capabilities that rival commercial solutions.</p>\n<hr>\n<h2>About This Project</h2>\n<p>This Security Monitoring Dashboard was developed as an independent Applied Learning Project to demonstrate the integration capabilities and potential between the technologies of <strong>Azure Sentinel</strong> and <strong>Power BI</strong> specifically. The complete source code, queries, and documentation are available in the project repository.</p>\n<p><strong>Technologies Used</strong>: Azure Sentinel, Log Analytics, Power BI, KQL, DAX, Azure AD</p>\n<p><strong>Project Repository</strong>: <a href=\"https://github.com/letisiapangataa/azure-sentinel-power-bi-dashboard\">Azure Sentinel Power BI Dashboard</a></p>\n<p><strong>Author</strong>: Letisia Pangata’a<br>\n<strong>Date</strong>: July 2025<br>\n<strong>Licence</strong>: MIT Licence</p>\n<hr>\n<p><em>Ready to build your own security monitoring dashboard? Check out our complete implementation guide and sample code in the project repository!</em></p>\n","difficulty":"Difficult"}},"__N_SSG":true}